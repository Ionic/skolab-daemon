KOLAB_META_START
TARGET=@resmgr_confdir@/resmgr.conf
PERMISSIONS=0640
OWNERSHIP=@resmgr_conffile_usr@:@resmgr_conffile_grp@
KOLAB_META_END
<?php

// What is the root directory of our Horde instance?
@define('HORDE_BASE', '@webserver_document_root@@webserver_web_prefix@/fbview');

// What is the address of the Cyrus server where the calendar data is stored?
$params['server'] = 'localhost';

// What is our default mail domain? This is used if any users do not have
// '@domain' specified after their username as part of their email address.
$params['email_domain'] = '@@@postfix-mydomain@@@';

// List of kolab hosts that are privileged
$params['kolabhosts'] = '@@@kolabhost|join(,)@@@';

// Are we using virtual domains with Cyrus?
$params['virtual_domains'] = true;

// Should we append domains to mailbox URIs? This only applies when
// virtual_domains is true, and when using manager accounts.
$params['append_domains'] = false;

// Should we make sure that the sender and From header match for mail
// that origins on this server?
@@@if kolabfilter-verify-from-header@@@
$params['verify_from_header'] = ('@@@kolabfilter-verify-from-header@@@'=='TRUE');
@@@else@@@
$params['verify_from_header'] = false;
@@@endif@@@

// Should we perform this check on mail from our
// subdomains too?
$params['verify_subdomains'] = true;

// Should the Sender: header be used over From: if present?
@@@if kolabfilter-allow-sender-header@@@
$params['allow_sender_header'] = ('@@@kolabfilter-allow-sender-header@@@'=='TRUE');
@@@else@@@
$params['allow_sender_header'] = false;
@@@endif@@@

// Should reject messages with From headers that dont match
// the envelope? Default is to rewrite the header
@@@if kolabfilter-reject-forged-from-header@@@
$params['reject_forged_from_header'] = ('@@@kolabfilter-reject-forged-from-header@@@'=='TRUE');
@@@else@@@
$params['reject_forged_from_header'] = false;
@@@endif@@@

// Text to be inserted in From: when rewriting untrusted mails
$params['untrusted_subject_insert'] = "(UNTRUSTED, sender is <%s>)";
$params['unauthenticated_subject_insert'] = "(UNTRUSTED, sender <%s> is not authenticated)";

// Should we allow forwarded ical messages from Outlook
// by encapsulating them in a MIME multipart
$params['allow_outlook_ical_forward']  = true;

// LDAP data
// What is the address of the LDAP server address where user objects reside
$params['ldap_uri'] = '@@@ldap_uri@@@';

// What is the Base DN of our LDAP database?
$params['base_dn'] = '@@@base_dn@@@';

// What DN should we use to bind to the LDAP server?
$params['bind_dn'] = '@@@php_dn@@@';

// What password should we use with the above DN when binding?
$params['bind_pw'] = '@@@php_pw@@@';


// What account should we use to read/write calendar data? This account should
// have access to the calendar mailbox of all resource/group mailboxes.
$params['calendar_user'] = 'calendar@'.$params['email_domain'];
$params['calendar_pass'] = '@@@calendar_pw@@@';

// Filename of private key used to decrypt password from LDAP
$params['priv_key_file'] = '@sysconfdir@/kolab/res_priv.pem';

// What is the name of the users' calendar mailbox?
// This is only used when the user does not already have
// a primary calendar folder (search via Kolab annotation)
$params['calendar_store'] = 'Calendar';

// Where can we get free/busy information from?
$params['freebusy_url'] = 'https://@@@fqdnhostname@@@@webserver_web_prefix@/freebusy/${USER}.xfb';
 
// PFB url to trigger creation of pfb
$params['pfb_trigger_url'] = 'https://@@@fqdnhostname@@@@webserver_web_prefix@/freebusy/trigger/${USER}/${FOLDER}.xpfb';

// Where are we logging to?
$params['log'] = 'file:@resmgr_logfile@';                // File...
// $params['log'] = 'syslog:cons, pid';            // Or syslog...

// What level of output should we log? Higher levels give more verbose output.
// One of: RM_LOG_SILENT; RM_LOG_ERROR; RM_LOG_WARN; RM_LOG_INFO or RM_LOG_DEBUG.
$params['log_level'] = RM_LOG_DEBUG;
?>
