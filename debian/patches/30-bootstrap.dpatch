#!/bin/sh /usr/share/dpatch/dpatch-run
## 30-bootstrap.dpatch by Noèl Köthe <noel@debian.org>
##
## DP: Fixups for Debian

@DPATCH@
diff -urNad kolabd-2.1.0-20070510.dfsg~/kolab_bootstrap.in kolabd-2.1.0-20070510.dfsg/kolab_bootstrap.in
--- kolabd-2.1.0-20070510.dfsg~/kolab_bootstrap.in	2007-02-11 15:47:51.000000000 +0100
+++ kolabd-2.1.0-20070510.dfsg/kolab_bootstrap.in	2007-07-30 13:44:24.000000000 +0200
@@ -21,6 +21,7 @@
 use Net::LDAP::Entry;
 use Net::Netmask;
 use File::Copy;
+use File::Path;
 use Getopt::Std;
 use Sys::Hostname;
 use Term::ReadKey;
@@ -49,19 +50,19 @@
 sub myhostname {
   my $host = '';
   # FIXME: hardcoded - maybe fixed later
-  if( open( HOSTNAME, '/etc/HOSTNAME' ) ) {
-    $host = <HOSTNAME>;
-    chomp $host;
-    close( HOSTNAME );
-  }
+#  if( open( HOSTNAME, '/etc/HOSTNAME' ) ) {
+#    $host = <HOSTNAME>;
+#    chomp $host;
+#    close( HOSTNAME );
+#  }
   # FIXME: hardcoded - maybe fixed later
-  if( open( HOSTNAME, '/etc/hostname' ) ) {
-    $host = <HOSTNAME>;
-    chomp $host;
-    close( HOSTNAME );
-  }
+#  if( open( HOSTNAME, '/etc/hostname' ) ) {
+#    $host = <HOSTNAME>;
+#    chomp $host;
+#    close( HOSTNAME );
+#  }
   if( $host eq '' ) {
-    $host = `hostname`;
+    $host = `hostname --fqdn`;
   }
   return $host;
 }
@@ -90,7 +91,7 @@
     print ("Error: Found $name running on Port $port\n");
     print ("Check your installation!\n");
     print ("You must stop the service $name before running Kolab\n");
-    print ("You may try to execute \"@KOLABRC@ rc all stop\" initially\n");
+    print ("You may try to execute \"/etc/init.d/\$DAEMON stop\" initially\n");
     exit 1;
   }
 }
@@ -226,7 +227,7 @@
   }
   my $epochseconds = timelocal(gmtime);
   my $backupdir="@backupdir@/backup".$epochseconds;
-  mkdir($backupdir,0700) || die "cannot mkdir : $!";
+  mkpath($backupdir,0,0700) || die "cannot mkpath : $!";
 
   print "creating backup of LDAP repository\n";
   system("cp -pRP \"@ldapserver_dir@\" \"$backupdir/openldap-data\"");
@@ -396,8 +397,23 @@
   };
 
   my $confname = "@sasl_smtpconffile@";
+  if (! -e "/etc/postfix/sasl/") {
+    mkdir( "/etc/postfix/sasl/", 0750) || die "cannot mkdir : $!";
+  }
   copy("@sysconfdir@/kolab/templates/smtpd.conf.template", $confname) || die "could not write to $confname";
 
+  # enable saslauthd by default
+  copy("/etc/default/saslauthd", "/etc/default/saslauthd.orig") || die "could not read /etc/default/saslauthd.orig";
+  my $saslauthd_orig = IO::File->new("/etc/default/saslauthd.orig", "r") || die "could not read /etc/default/saslauthd.orig";
+  my $saslauthd = IO::File->new("/etc/default/saslauthd", "w") || die "could not read /etc/default/saslauthd";
+  foreach (<$saslauthd_orig>) {
+    s/^(# )?START=.*$/START=yes/g;
+    s/^MECHANISMS="pam"/MECHANISMS="ldap"/g;
+        print $saslauthd $_;
+  }
+  undef $saslauthd;
+  undef $saslauthd_orig;
+
   getopts('b');
 
   if ($opt_b) {
@@ -437,6 +453,7 @@
       undef $slpd;
       undef $tmpl;
       kolab_chown "@ldapserver_usr@","@ldapserver_grp@","@ldapserver_confdir@/slapd.conf";
+      system("adduser --quiet @ldapserver_usr@ @pki_grp@");
       
       my $tmplname = "@sysconfdir@/kolab/templates/slapd.replicas.template";
       $confname = "@ldapserver_confdir@/slapd.replicas";
@@ -485,7 +502,7 @@
       $ldap_uri = "ldap://127.0.0.1:389/";
       # ensure that the database has correct permissions
       system("chown @ldapserver_rusr@:@ldapserver_grp@ @ldapserver_dir@/*");
-      (system("@libexecdir@/openldap/slapd -h ldap://127.0.0.1:389/ -f @ldapserver_confdir@/slapd.conf -u @ldapserver_rusr@ -g @ldapserver_grp@") == 0 ) || die( "Could not start temporary slapd: $!" );
+      (system("/usr/sbin/slapd -h ldap://127.0.0.1:389/ -f @ldapserver_confdir@/slapd.conf -u @ldapserver_rusr@ -g @ldapserver_grp@") == 0 ) || die( "Could not start temporary slapd: $!" );
       print ("Waiting for OpenLDAP to start\n");
       sleep 10;
 
@@ -654,7 +671,7 @@
 
    if ($ldap_uri =~ /127\.0\.0\.1/ || $ldap_uri =~ /localhost/) {
       print "\nkill temporary slapd\n\n";
-      system("@KOLABRC@ rc @LDAPD@ stop");
+      system("/etc/init.d/slapd stop");
       sleep 1; # actually race should be impossible
       system("killall -9 slapd >/dev/null 2>&1");
    }
@@ -721,7 +738,7 @@
   ##### Slave server setup
 
   print "stop running slapd (if any)\n";
-  kolab_system("@KOLABRC@ rc @LDAPD@ stop");
+  kolab_system("/etc/init.d/slapd stop");
 
   # Make sure that no rogue demons are running
   tryConnect( '127.0.0.1', 389 ) && die "A process is already listening to port 389 (ldap)\n"
@@ -839,9 +856,9 @@
 is copied over to this slave. Please make sure that this slave is entered into the list 
 of kolabhosts on the master before proceeding.
 EOS
-  kolab_system("ssh -CA $master_host @KOLABRC@ rc @LDAPD@ stop");
+  kolab_system("ssh -CA $master_host /etc/init.d/slapd stop");
   kolab_system("ssh -CA $master_host @TAR@ -C @ldapserver_statedir@ -pcf - openldap-data | @TAR@ -C @ldapserver_statedir@ -pxf -");
-  kolab_system("ssh -CA $master_host @KOLABRC@ rc @LDAPD@ start");
+  kolab_system("ssh -CA $master_host /etc/init.d/slapd start");
 
   # FIXME: we should get rid of this construct because it makes the code hard to read.
   #        A if (-e @sysconfdir@/rc.conf) statement should be enough.
@@ -939,6 +956,6 @@
 
 #system("@sysconfdir@/kolab/kolab_sslcert.sh $fqdn");
 print "kolab is now ready to run!\n";
-print "please run '@KOLABRC@ rc all start'\n";
+print "please restart all the daemons\n";
 print ("Use login=manager and passwd=$bind_pw when you log into\n");
 print ("the webinterface https://$fqdn@webserver_web_prefix@/admin !\n");
